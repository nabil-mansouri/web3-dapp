/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TokenGeneratorInterface extends ethers.utils.Interface {
  functions: {
    "drop()": FunctionFragment;
    "getManagerById(uint256)": FunctionFragment;
    "libAddress()": FunctionFragment;
    "managerCounter()": FunctionFragment;
    "managersByAddr(address)": FunctionFragment;
    "managersById(uint256)": FunctionFragment;
    "managersByOwner(address,uint256)": FunctionFragment;
    "managersByUser(address,uint256)": FunctionFragment;
    "mint(address,uint256,uint256,uint256,bool,tuple)": FunctionFragment;
    "owner()": FunctionFragment;
    "paused()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "seeManagerCounter()": FunctionFragment;
    "seeManagerIdsFor(address)": FunctionFragment;
    "setConfig(address)": FunctionFragment;
    "track(address,uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "untrack(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "drop", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getManagerById",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "libAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "managerCounter",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "managersByAddr",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "managersById",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "managersByOwner",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "managersByUser",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      boolean,
      {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      }
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "seeManagerCounter",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "seeManagerIdsFor",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setConfig", values: [string]): string;
  encodeFunctionData(
    functionFragment: "track",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "untrack",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "drop", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getManagerById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "libAddress", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "managerCounter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managersByAddr",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managersById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managersByOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "managersByUser",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "seeManagerCounter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "seeManagerIdsFor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setConfig", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "track", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "untrack", data: BytesLike): Result;

  events: {
    "Mint(address,tuple)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "Paused(address)": EventFragment;
    "Unpaused(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Mint"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Paused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpaused"): EventFragment;
}

export class TokenGenerator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TokenGeneratorInterface;

  functions: {
    drop(overrides?: Overrides): Promise<ContractTransaction>;

    "drop()"(overrides?: Overrides): Promise<ContractTransaction>;

    getManagerById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        _id: BigNumber;
        _address: string;
        _owner: string;
        _supply: BigNumber;
        _nftaddr: string;
        _nftid: BigNumber;
        _quantity: BigNumber;
        _erc721: boolean;
        _meta: {
          name: string;
          description: string;
          image: string;
          json: string;
          0: string;
          1: string;
          2: string;
          3: string;
        };
        0: BigNumber;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: BigNumber;
        6: BigNumber;
        7: boolean;
        8: {
          name: string;
          description: string;
          image: string;
          json: string;
          0: string;
          1: string;
          2: string;
          3: string;
        };
      };
    }>;

    "getManagerById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        _id: BigNumber;
        _address: string;
        _owner: string;
        _supply: BigNumber;
        _nftaddr: string;
        _nftid: BigNumber;
        _quantity: BigNumber;
        _erc721: boolean;
        _meta: {
          name: string;
          description: string;
          image: string;
          json: string;
          0: string;
          1: string;
          2: string;
          3: string;
        };
        0: BigNumber;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: BigNumber;
        6: BigNumber;
        7: boolean;
        8: {
          name: string;
          description: string;
          image: string;
          json: string;
          0: string;
          1: string;
          2: string;
          3: string;
        };
      };
    }>;

    libAddress(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "libAddress()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    managerCounter(overrides?: CallOverrides): Promise<{
      _value: BigNumber;
      0: BigNumber;
    }>;

    "managerCounter()"(overrides?: CallOverrides): Promise<{
      _value: BigNumber;
      0: BigNumber;
    }>;

    managersByAddr(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "managersByAddr(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    managersById(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      _id: BigNumber;
      _address: string;
      _owner: string;
      _supply: BigNumber;
      _nftaddr: string;
      _nftid: BigNumber;
      _quantity: BigNumber;
      _erc721: boolean;
      _meta: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
      7: boolean;
      8: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
    }>;

    "managersById(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      _id: BigNumber;
      _address: string;
      _owner: string;
      _supply: BigNumber;
      _nftaddr: string;
      _nftid: BigNumber;
      _quantity: BigNumber;
      _erc721: boolean;
      _meta: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
      7: boolean;
      8: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
    }>;

    managersByOwner(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "managersByOwner(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    managersByUser(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "managersByUser(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    mint(
      _nftaddr: string,
      _nftid: BigNumberish,
      _supply: BigNumberish,
      _quantity: BigNumberish,
      _erc721: boolean,
      meta: {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mint(address,uint256,uint256,uint256,bool,(bytes,bytes,bytes,bytes))"(
      _nftaddr: string,
      _nftid: BigNumberish,
      _supply: BigNumberish,
      _quantity: BigNumberish,
      _erc721: boolean,
      meta: {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "owner()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    paused(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "paused()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    seeManagerCounter(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "seeManagerCounter()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    seeManagerIdsFor(
      owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    "seeManagerIdsFor(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    setConfig(
      _libAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setConfig(address)"(
      _libAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    track(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "track(address,uint256)"(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    untrack(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "untrack(address,uint256)"(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  drop(overrides?: Overrides): Promise<ContractTransaction>;

  "drop()"(overrides?: Overrides): Promise<ContractTransaction>;

  getManagerById(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    _id: BigNumber;
    _address: string;
    _owner: string;
    _supply: BigNumber;
    _nftaddr: string;
    _nftid: BigNumber;
    _quantity: BigNumber;
    _erc721: boolean;
    _meta: {
      name: string;
      description: string;
      image: string;
      json: string;
      0: string;
      1: string;
      2: string;
      3: string;
    };
    0: BigNumber;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: BigNumber;
    6: BigNumber;
    7: boolean;
    8: {
      name: string;
      description: string;
      image: string;
      json: string;
      0: string;
      1: string;
      2: string;
      3: string;
    };
  }>;

  "getManagerById(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    _id: BigNumber;
    _address: string;
    _owner: string;
    _supply: BigNumber;
    _nftaddr: string;
    _nftid: BigNumber;
    _quantity: BigNumber;
    _erc721: boolean;
    _meta: {
      name: string;
      description: string;
      image: string;
      json: string;
      0: string;
      1: string;
      2: string;
      3: string;
    };
    0: BigNumber;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: BigNumber;
    6: BigNumber;
    7: boolean;
    8: {
      name: string;
      description: string;
      image: string;
      json: string;
      0: string;
      1: string;
      2: string;
      3: string;
    };
  }>;

  libAddress(overrides?: CallOverrides): Promise<string>;

  "libAddress()"(overrides?: CallOverrides): Promise<string>;

  managerCounter(overrides?: CallOverrides): Promise<BigNumber>;

  "managerCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

  managersByAddr(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  "managersByAddr(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  managersById(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    _id: BigNumber;
    _address: string;
    _owner: string;
    _supply: BigNumber;
    _nftaddr: string;
    _nftid: BigNumber;
    _quantity: BigNumber;
    _erc721: boolean;
    _meta: {
      name: string;
      description: string;
      image: string;
      json: string;
      0: string;
      1: string;
      2: string;
      3: string;
    };
    0: BigNumber;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: BigNumber;
    6: BigNumber;
    7: boolean;
    8: {
      name: string;
      description: string;
      image: string;
      json: string;
      0: string;
      1: string;
      2: string;
      3: string;
    };
  }>;

  "managersById(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    _id: BigNumber;
    _address: string;
    _owner: string;
    _supply: BigNumber;
    _nftaddr: string;
    _nftid: BigNumber;
    _quantity: BigNumber;
    _erc721: boolean;
    _meta: {
      name: string;
      description: string;
      image: string;
      json: string;
      0: string;
      1: string;
      2: string;
      3: string;
    };
    0: BigNumber;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: BigNumber;
    6: BigNumber;
    7: boolean;
    8: {
      name: string;
      description: string;
      image: string;
      json: string;
      0: string;
      1: string;
      2: string;
      3: string;
    };
  }>;

  managersByOwner(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "managersByOwner(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  managersByUser(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "managersByUser(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  mint(
    _nftaddr: string,
    _nftid: BigNumberish,
    _supply: BigNumberish,
    _quantity: BigNumberish,
    _erc721: boolean,
    meta: {
      name: BytesLike;
      description: BytesLike;
      image: BytesLike;
      json: BytesLike;
    },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mint(address,uint256,uint256,uint256,bool,(bytes,bytes,bytes,bytes))"(
    _nftaddr: string,
    _nftid: BigNumberish,
    _supply: BigNumberish,
    _quantity: BigNumberish,
    _erc721: boolean,
    meta: {
      name: BytesLike;
      description: BytesLike;
      image: BytesLike;
      json: BytesLike;
    },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  "paused()"(overrides?: CallOverrides): Promise<boolean>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  seeManagerCounter(overrides?: CallOverrides): Promise<BigNumber>;

  "seeManagerCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

  seeManagerIdsFor(
    owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "seeManagerIdsFor(address)"(
    owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  setConfig(
    _libAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setConfig(address)"(
    _libAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  track(
    _addr: string,
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "track(address,uint256)"(
    _addr: string,
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  untrack(
    _addr: string,
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "untrack(address,uint256)"(
    _addr: string,
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    drop(overrides?: CallOverrides): Promise<boolean>;

    "drop()"(overrides?: CallOverrides): Promise<boolean>;

    getManagerById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      _id: BigNumber;
      _address: string;
      _owner: string;
      _supply: BigNumber;
      _nftaddr: string;
      _nftid: BigNumber;
      _quantity: BigNumber;
      _erc721: boolean;
      _meta: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
      7: boolean;
      8: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
    }>;

    "getManagerById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      _id: BigNumber;
      _address: string;
      _owner: string;
      _supply: BigNumber;
      _nftaddr: string;
      _nftid: BigNumber;
      _quantity: BigNumber;
      _erc721: boolean;
      _meta: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
      7: boolean;
      8: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
    }>;

    libAddress(overrides?: CallOverrides): Promise<string>;

    "libAddress()"(overrides?: CallOverrides): Promise<string>;

    managerCounter(overrides?: CallOverrides): Promise<BigNumber>;

    "managerCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

    managersByAddr(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "managersByAddr(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managersById(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      _id: BigNumber;
      _address: string;
      _owner: string;
      _supply: BigNumber;
      _nftaddr: string;
      _nftid: BigNumber;
      _quantity: BigNumber;
      _erc721: boolean;
      _meta: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
      7: boolean;
      8: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
    }>;

    "managersById(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      _id: BigNumber;
      _address: string;
      _owner: string;
      _supply: BigNumber;
      _nftaddr: string;
      _nftid: BigNumber;
      _quantity: BigNumber;
      _erc721: boolean;
      _meta: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: BigNumber;
      6: BigNumber;
      7: boolean;
      8: {
        name: string;
        description: string;
        image: string;
        json: string;
        0: string;
        1: string;
        2: string;
        3: string;
      };
    }>;

    managersByOwner(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managersByOwner(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managersByUser(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managersByUser(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mint(
      _nftaddr: string,
      _nftid: BigNumberish,
      _supply: BigNumberish,
      _quantity: BigNumberish,
      _erc721: boolean,
      meta: {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "mint(address,uint256,uint256,uint256,bool,(bytes,bytes,bytes,bytes))"(
      _nftaddr: string,
      _nftid: BigNumberish,
      _supply: BigNumberish,
      _quantity: BigNumberish,
      _erc721: boolean,
      meta: {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    "paused()"(overrides?: CallOverrides): Promise<boolean>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    seeManagerCounter(overrides?: CallOverrides): Promise<BigNumber>;

    "seeManagerCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

    seeManagerIdsFor(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "seeManagerIdsFor(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    setConfig(_libAddress: string, overrides?: CallOverrides): Promise<void>;

    "setConfig(address)"(
      _libAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    track(
      _addr: string,
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "track(address,uint256)"(
      _addr: string,
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    untrack(
      _addr: string,
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "untrack(address,uint256)"(
      _addr: string,
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    Mint(owner: string | null, manager: null): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    Paused(account: null): EventFilter;

    Unpaused(account: null): EventFilter;
  };

  estimateGas: {
    drop(overrides?: Overrides): Promise<BigNumber>;

    "drop()"(overrides?: Overrides): Promise<BigNumber>;

    getManagerById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getManagerById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    libAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "libAddress()"(overrides?: CallOverrides): Promise<BigNumber>;

    managerCounter(overrides?: CallOverrides): Promise<BigNumber>;

    "managerCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

    managersByAddr(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "managersByAddr(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managersById(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managersById(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managersByOwner(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managersByOwner(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    managersByUser(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "managersByUser(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mint(
      _nftaddr: string,
      _nftid: BigNumberish,
      _supply: BigNumberish,
      _quantity: BigNumberish,
      _erc721: boolean,
      meta: {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "mint(address,uint256,uint256,uint256,bool,(bytes,bytes,bytes,bytes))"(
      _nftaddr: string,
      _nftid: BigNumberish,
      _supply: BigNumberish,
      _quantity: BigNumberish,
      _erc721: boolean,
      meta: {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      },
      overrides?: Overrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    "paused()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    seeManagerCounter(overrides?: CallOverrides): Promise<BigNumber>;

    "seeManagerCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

    seeManagerIdsFor(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "seeManagerIdsFor(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setConfig(_libAddress: string, overrides?: Overrides): Promise<BigNumber>;

    "setConfig(address)"(
      _libAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    track(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "track(address,uint256)"(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    untrack(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "untrack(address,uint256)"(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    drop(overrides?: Overrides): Promise<PopulatedTransaction>;

    "drop()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    getManagerById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getManagerById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    libAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "libAddress()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    managerCounter(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "managerCounter()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    managersByAddr(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managersByAddr(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    managersById(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managersById(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    managersByOwner(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managersByOwner(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    managersByUser(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "managersByUser(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mint(
      _nftaddr: string,
      _nftid: BigNumberish,
      _supply: BigNumberish,
      _quantity: BigNumberish,
      _erc721: boolean,
      meta: {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mint(address,uint256,uint256,uint256,bool,(bytes,bytes,bytes,bytes))"(
      _nftaddr: string,
      _nftid: BigNumberish,
      _supply: BigNumberish,
      _quantity: BigNumberish,
      _erc721: boolean,
      meta: {
        name: BytesLike;
        description: BytesLike;
        image: BytesLike;
        json: BytesLike;
      },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "paused()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    seeManagerCounter(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "seeManagerCounter()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    seeManagerIdsFor(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "seeManagerIdsFor(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setConfig(
      _libAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setConfig(address)"(
      _libAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    track(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "track(address,uint256)"(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    untrack(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "untrack(address,uint256)"(
      _addr: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
